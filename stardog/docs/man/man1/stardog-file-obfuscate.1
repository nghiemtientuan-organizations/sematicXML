.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "STARDOG_FILE_OBFUSCATE" "1" "June 2021" "Stardog Union" "stardog"
.
.SH "NAME"
\fBstardog_file_obfuscate\fR \- Obfuscates the contents of the given RDF file
.
.SH "SYNOPSIS"
\fBstardog\fR \fBfile\fR \fBobfuscate\fR [ {\-c | \-\-config} \fIobfuscation configuration\fR ] [ {\-f | \-\-format} \fIrdf format\fR ] [\-\-] \fIinputFile\fR
.
.SH "OPTIONS"
.
.TP
\fB\-c\fR \fIobfuscation configuration\fR, \fB\-\-config\fR \fIobfuscation configuration\fR
Configuration file for obfuscation
.
.TP
\fB\-f\fR \fIrdf format\fR, \fB\-\-format\fR \fIrdf format\fR
RDF Format for the output\. The supported formats are NTRIPLES, RDF/XML, TURTLE, PRETTY_TURTLE, TRIG, TRIX, N3, NQUADS, JSONLD\. By default output files will have the same format as the first input file\.
.
.TP
\-\-
This option can be used to separate command\-line options from the list of arguments (useful when arguments might be mistaken for command\-line options)\.
.
.TP
\fIinputFile\fR
Input file to obfuscate\.
.
.SH "DISCUSSION"
Obfuscates the contents of the file by replacing all URIs, bnodes, and string literals using a message digest algorithm\. Non\-string typed literals (integers, floats, dates, etc\.) are left unchanged\. The obfuscation is guided by a configuration file\. Configurations can specify which URIs and strings will be obfuscated by defining inclusion and exclusion filters\.
.
.SH "EXAMPLES"
.
.TP
Obfuscate input file\.
$ stardog file obfuscate input\.rdf
.
.TP
Obfuscate input file using a custom configuration and output in TURTLE format:
$ stardog file obfuscate \-\-config my_config\.ttl \-\-format turtle input\.rdf

