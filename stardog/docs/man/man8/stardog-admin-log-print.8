.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "STARDOG\-ADMIN_LOG_PRINT" "8" "June 2021" "Stardog Union" "stardog-admin"
.
.SH "NAME"
\fBstardog\-admin_log_print\fR \- Prints the contents of an access or audit log\. A log is a sequence of events where each event has a type, timestamp, user, ip, flags, and an optional value\.
.
.SH "SYNOPSIS"
\fBstardog\-admin\fR \fBlog\fR \fBprint\fR [ {\-d | \-\-delimeter} \fIdelimeter\fR ] [ {\-f | \-\-field} \fIfield\fR\.\.\. ] [ \-\-filter \fIfilter\fR\.\.\. ] [ \-\-json ] [ {\-n | \-\-lines} \fIlines\fR ] [ \-\-tail ] [ \-\-text ] [\-\-] \fIlog file\fR
.
.SH "OPTIONS"
.
.TP
\fB\-d\fR \fIdelimeter\fR, \fB\-\-delimeter\fR \fIdelimeter\fR
Delimeter to use for separating fields in the output\. By default the output is printed in a tabular format but this option can be used to output in CSV or TSV format\.
.
.TP
\fB\-f\fR \fIfield\fR, \fB\-\-field\fR \fIfield\fR
Fields to include in the output\. Allowed values are: {Time, Event, Database, User, IP, Value, Flags}
.
.TP
\fB\-\-filter\fR \fIfilter\fR
Filter expressions to hide certain events\. A filter expression is in the form \'field op value\' where field is one of the fields defined in \-\-field option, op is one of \'=\', \'\fI\', \'<=\', \'\fR\', \'>=\', or \'~\', and value should be a valid value for the field\. For example,filter expression for time field should use xsd:date or xsd:dateTime values\. The op \'~\' represents regular expression matching where value should be a valid Java regular expression and should match the entire value of the given field\. Valid values for event field are: { AddRole, AddUser, AddUserRole, Authentication, Backup, ChangePassword, ChangeUserEnabled, ConnectionClose, ConnectionOpen, Copy, CreateDatabase, DataAdd, DataRemove, DataRemoveAll, DataRemoveContext, DeleteRole, DeleteUser, DeleteUserRole, DropDatabase, GetEffectiveUserPermissions, GetEnabledStatus, GetOption, GetRolePermissions, GetSuperStatus, GetUserPermissions, GetUserRoles, GetUsersWithRole, ListRoles, ListUsers, Migrate, Offline, Online, Optimize, Query, QueryEnd, Repair, Restore, RolePermissionGrant, RolePermissionRevoke, SetEnabledStatus, SetOption, SetSuperStatus, SetUserRoles, Shutdown, Startup, StoredQueryAdded, StoredQueryRemoved, StoredQueryUpdated, TxBegin, TxCommit, TxRollback, UserPermissionGrant, UserPermissionRevoke, WildcardPermissionRevoke }
.
.TP
\fB\-\-json\fR
Display results in JSON\.
.
.TP
\fB\-n\fR \fIlines\fR, \fB\-\-lines\fR \fIlines\fR
The number of lines to output from the bottom of the file\. \-1 is the default and means every line\.
.
.TP
\fB\-\-tail\fR
Wait for new events to be logged and print them as they are logged\.
.
.TP
\fB\-\-text\fR
Used to indicate that the log file is in text format\. Otherwise log will be assumed to be in binary format\.
.
.TP
\-\-
This option can be used to separate command\-line options from the list of arguments (useful when arguments might be mistaken for command\-line options)\.
.
.TP
\fIlog file\fR
The log file to print
.
.SH "EXAMPLES"
.
.TP
Print all the events in the log file
$ stardog\-admin log print access\.log
.
.TP
Print all the events but show only the specified fields
$ stardog\-admin log print \-\-field time user database query \-\- access\.log
.
.TP
Print only query events for the databases matching the regular expression that occurred in a specific time interval
$ stardog\-admin log print \-\-filter event=query database~customer\.* time>=2014\-01\-06 time<=2014\-01\-07 \-\- audit\.log

